name: Wheel builder

on:
  # workflow_call:
  #     inputs:
  #         project:
  #           description: 'Name of the project to test'
  #           default: 'PROJECT_NAME'
  #           required: false
  #           type: string
  #         c_extension:
  #           description: 'Whether the project has a C extension'
  #           default: false
  #           required: false
  #           type: boolean
  pull_request:
  push:
  workflow_dispatch:

jobs:
  build_wheels:

    defaults:
        run:
          shell: bash -l {0}

    name: Build wheel ${{ matrix.python[0] }}-${{ matrix.buildplat[0] }}
    runs-on: ${{ matrix.buildplat[0] }}
    strategy:
      fail-fast: false
      matrix:
        buildplat:
          - [ubuntu-latest, manylinux_x86_64]
          - [macos-13, macosx_x86_64]
          - [macos-14, macosx_arm64]
          - [windows-latest, win_amd64]
        python:
          - ["3.10", "cp310"]
          - ["3.11", "cp311"]
          - ["3.12", "cp312"]

    steps:
      - name: Check out #${{ inputs.project }}
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python[0] }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python[0] }}

      - name: Build wheels for Linux
        if: runner.os == 'Linux'
        uses: pypa/cibuildwheel@v2.21.1
        env:
          CIBW_BUILD: ${{ matrix.python[1] }}-${{ matrix.buildplat[1] }}
          CIBW_BEFORE_BUILD: yum install -y gsl-devel && pip install -e .
        with:
          output-dir: wheelhouse

      - name: Build wheels for macOS
        if: runner.os == 'macOS'
        uses: pypa/cibuildwheel@v2.21.1
        env:
          CIBW_BUILD: ${{ matrix.python[1] }}-${{ matrix.buildplat[1] }}
          MACOSX_DEPLOYMENT_TARGET: 13.0
          CIBW_BEFORE_BUILD: brew install gsl && pip install -e .
        with:
          output-dir: wheelhouse

      - name: Build wheels for Windows
        if: runner.os == 'Windows'
        uses: pypa/cibuildwheel@v2.21.1
        env:
          CIBW_BUILD: ${{ matrix.python[1] }}-${{ matrix.buildplat[1] }}
          CONDA_PREFIX: ${{ env.CONDA_PREFIX }}
          CIBW_BEFORE_BUILD: |
            REM Remove existing vcpkg if it exists
            IF EXIST "C:\vcpkg" (
                RMDIR /S /Q "C:\vcpkg"
            )
            
            REM Clone vcpkg repository
            git clone https://github.com/microsoft/vcpkg.git C:\vcpkg
            cd C:\vcpkg
            .\bootstrap-vcpkg.bat
            .\vcpkg integrate install
            .\vcpkg install gsl gsl:x64-windows
            
            REM Set absolute path
            set "GSL_PATH=C:\vcpkg\installed\x64-windows"
            set "INCLUDE=%GSL_PATH%\include;%INCLUDE%"
            set "LIB=%GSL_PATH%\lib;%LIB%"
            
            REM Debugging: Print the set environment variables
            echo GSL_PATH set to: %GSL_PATH%
            echo INCLUDE set to: %INCLUDE%
            echo LIB set to: %LIB%
            
            REM Verify that gsl_errno.h exists
            IF NOT EXIST "%GSL_PATH%\include\gsl\gsl_errno.h" (
                echo gsl_errno.h not found at %GSL_PATH%\include\gsl\gsl_errno.h
                exit /b 1
            )
            
            REM Optional: List directories for verification
            echo Listing GSL include directory:
            dir "%GSL_PATH%\include\gsl\"
            
            echo Listing GSL lib directory:
            dir "%GSL_PATH%\lib\"
        with:
          output-dir: wheelhouse

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.python[0] }}-${{ matrix.buildplat[0] }}
          path: ./wheelhouse/*.whl
